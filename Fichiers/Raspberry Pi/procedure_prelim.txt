Pour le raspberry pi des caméras:
    (Setup de base)
	1- Brancher la carte micro-SD dans l'ordinateur
	2- Choisir l'OS Raspberry Pi OS Lite (32-bit) (Menu principal -> Raspberry Pi OS other -> Raspberry Pi OS Lite (32-bit)) sur le logiciel Raspberry Pi Manager et choisir la carte SD afin de copier l'OS de base
	3- Démarrer le raspberry et se connecter avec le compte de base (username: pi, password: raspberry)
	4- Ajouter un nouvel utilisateur sudo nommer ProtolabQuebec (sudo useradd -m ProtolabQuebec)
	5- Mettre le mot de passe à Occulus (sudo passwd ProtolabQuebec)
	6- Mettre le nouvel utilisateur ProtolabQuebec dans le groupe des sudoers (sudo usermod -a -G sudo ProtolabQuebec)
	7- Se déconnecter avec la commande logout et se reconnecter dans le compte créer précédemment (username: ProtolabQuebec password: Occulus)
	8- Créer un répertoire recordings et un répertoire preview dans le path /home/ProtolabQuebec (mkdir recordings et mkdir preview) 
	9- Mettre toutes les permissions sur les deux dossiers précedemment créer (chmod 777 recordings et chmod 777 preview)
	10- Supprimer l'ancien utilisateur en faisant (sudo userdel -r pi)

	(Pour permettre au Pi de se connecter au réseau du router, il faut aller ajouter le nom du réseau et son mot de passe dans le fichier wpa-supplicant)
	11- Aller ouvrir le fichier pour pouvoir aller l'éditer (sudo nano /etc/wpa_supplicant/wpa_supplicant.conf)
	12- Ajouter une section network={} et dans celle-ci aller ajouter ssid="Protolab_2.4GHz" et psk="Occulus2.4"

	Ajouter les packages à installer (sudo apt install python3-pip, connexion Internet requise):
        pysendfile (pip3 install pysendfile)
        smbus2 pour I2C
        package pour GPIO (à revoir, n'a pas fonctionné pour Vincent)

	(Si vous devez utiliser l'adapteur Wi-Fi, voici comment faire pour le configurer pour que le Raspberry Pi puisse l'utiliser)
	- installer le package pour pouvoir builder le drive (sudo apt-get install build-essential) sur la carte SD, connexion Internet requise
	- Copier le fichier du driver Linux pour l'adapteur sur la carte Micro-SD (scp -r path\EW-7811Un_V2_Linux_Driver_1.0.0.3\ ProtlabQuebec@IP:/home/ProtolabQuebec)
	- Brancher l'adapteur dans la carte mère et alimenter le pi
	- Après le boot, en faisant la commande dmesg | more et en cliquant sur la barre espace plusieurs fois, vous trouverez la ligne usb 1-1.1 (1-1.2): Product: Edimax M150 Adapter. Cela signifie que le Raspberry Pi le détecte bien.
	- Aller dans le dossier avec la commande cd (cd EW-7811Un_V2_Linux_Driver_1.0.0.3)
	- Décompresser le fichier en faisant la commande gunzip (gunzip -d rtl8188EUS_linux_v5.3.9_28540.20180627.tar.gz)
	- Décompresser le fichier en faisant la commande tar (tar -xvf rtl8188EUS_linux_v5.3.9_28540.20180627.tar)
	- Aller dans le dossier en faisant la commande cd (cd rtl8188EUS_linux_v5.3.9_28540.20180627)
	- Builder le driver en exécutant la commande sudo make
	(Ça ne marche pas, mais je laisse ça içi au cas où)

	(Pour permettre le contrôle à distance, il faut aller l'activer, car il est désactiver par défaut)
	13- Ce rendre dans les configurations du Pi (sudo raspi-config)
	14- Sélectionner Interface Options
	15- Sélectionner P2 SSH
	15- Sélectionner Yes
	16- Attendre que la configuration soit finie et sélectionner Finish

	(Pour permettre la communication I2C, il faut aller l'activer, car il est désactiver par défaut)
	15- Ce rendre dans les configurations du Pi (sudo raspi-config)
	16- Sélectionner Interface Options
	17- Sélectionner P5 I2C
	18- Sélectionner Yes
	19- Attendre que la configuration soit finie et sélectionner Finish


	(Pour transférer le fichier main de la camera dans le Pi)
	20- Effectuer la commande suivante pour transférer un fichier vers le Pi -> scp "path_du_fichier"/main_camera.py ProtolabQuebec@"ip_du_pi":/home/ProtolabQuebec/

	(Pour activer l'alimentation des port USB, il faut aller l'activer, car il est désactiver par défaut)
	21- Aller dans le fichier pour écrire(sudo nano /boot/config.txt)
	22- Ajouter dans le fichier: dtoverlay=dwc2,dr_mode=host
	23- Faire un reboot du Pi

	# TODO rajouter le fait de faire runner le script au boot

Pour le router (rien de bien spécial):
	1- Se connecter dans le router (aucun mot de passe au début)
	2- Automatic IP (DHCP)
	3- Aller dans Setup -> Wireless Settings et choisir les noms et mots de passe des réseaux
	4- Aller dans Advanced -> 2.4G Advanced Wireless -> Wireless Mode à 802.11n only
	5- Changer le mot de passe dans Tools -> password
